/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */


 // Bootstrap
@import "bootstrap-sprockets";
@import "bootstrap";

// Variables
@import "base/variables";

// Default styles
// @import "base/default";

// Partials - main css files
@import "partials/*";
@import "partials/layout/*";

// Media queries for a responsive design
@import "responsive/*";


 @import "bulma";
 @import "functions";

 .image {
  border-radius: 50%;
  img {
    border-radius: 50%;
  }
}

.notification:not(:last-child) {
  margin-bottom: 0;
}

.textarea {
  height: 250px;
  font-family: Monaco, san-serif;
  font-size: .9rem;
  padding: 1rem;
}

.discussion-title {
  margin-bottom: 0;
}

.search-bar input,
.search-btn, 
.search-btn:before, 
.search-btn:after {
	transition: all 0.25s ease-out;
}
.search-bar input,
.search-btn {
	width: 3em;
	height: 3em;
}
.search-bar input:invalid:not(:focus),
.search-btn {
	cursor: pointer;
}
.search-bar,
.search-bar input:focus,
.search-bar input:valid  {
	width: 100%;
}
.search-bar input:focus,
.search-bar input:not(:focus) + .search-btn:focus {
	outline: transparent;
}
.search-bar {
	margin: auto;
	padding: 1.5em;
	justify-content: center;
	max-width: 30em;
}
.search-bar input {
	background: transparent;
	border-radius: 1.5em;
	box-shadow: 0 0 0 0.4em #171717 inset;
	padding: 0.75em;
	transform: translate(0.5em,0.5em) scale(0.5);
	transform-origin: 100% 0;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
}
.search-bar input::-webkit-search-decoration {
	-webkit-appearance: none;
}
.search-bar input:focus,
.search-bar input:valid {
	background: #fff;
	border-radius: 0.375em 0 0 0.375em;
	box-shadow: 0 0 0 0.1em #d9d9d9 inset;
	transform: scale(1);
}
.search-btn {
	background: #171717;
	border-radius: 0 0.75em 0.75em 0 / 0 1.5em 1.5em 0;
	padding: 0.75em;
	position: relative;
	transform: translate(0.25em,0.25em) rotate(45deg) scale(0.25,0.125);
	transform-origin: 0 50%;
}
.search-btn:before, 
.search-btn:after {
	content: "";
	display: block;
	opacity: 0;
	position: absolute;
}
.search-btn:before {
	border-radius: 50%;
	box-shadow: 0 0 0 0.2em #f1f1f1 inset;
	top: 0.75em;
	left: 0.75em;
	width: 1.2em;
	height: 1.2em;
}
.search-btn:after {
	background: #f1f1f1;
	border-radius: 0 0.25em 0.25em 0;
	top: 51%;
	left: 51%;
	width: 0.75em;
	height: 0.25em;
	transform: translate(0.2em,0) rotate(45deg);
	transform-origin: 0 50%;
}
.search-btn span {
	display: inline-block;
	overflow: hidden;
	width: 1px;
	height: 1px;
}

/* Active state */
.search-bar input:focus + .search-btn,
.search-bar input:valid + .search-btn {
	background: #2762f3;
	border-radius: 0 0.375em 0.375em 0;
	transform: scale(1);
}
.search-bar input:focus + .search-btn:before, 
.search-bar input:focus + .search-btn:after,
.search-bar input:valid + .search-btn:before, 
.search-bar input:valid + .search-btn:after {
	opacity: 1;
}
.search-bar input:focus + .search-btn:hover,
.search-bar input:valid + .search-btn:hover,
.search-bar input:valid:not(:focus) + .search-btn:focus {
	background: #0c48db;
}
.search-bar input:focus + .search-btn:active,
.search-bar input:valid + .search-btn:active {
	transform: translateY(1px);
}

@media screen and (prefers-color-scheme: dark) {
	body, input {
		color: #f1f1f1;
	}
	body {
		background: #171717;
	}
	.search-bar input {
		box-shadow: 0 0 0 0.4em #f1f1f1 inset;
	}
	.search-bar input:focus,
	.search-bar input:valid {
		background: #3d3d3d;
		box-shadow: 0 0 0 0.1em #3d3d3d inset;
	}
	.search-btn {
		background: #f1f1f1;
	}
}

/* for the navbar*/
:root {
  font-size: 14px;
  z-index: 5;
}
header {
  position: relative;
  display: flex;
  justify-content: space-between;
}

.logo {
  width: 120px;
  overflow: hidden;
}

.logo--white path {
  fill: #fff;
}

.logo svg {
  max-width: 100%;
  height: auto;
}

.header__button {
  z-index: 5;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: #5b7cae;
  border: 0;
  cursor: pointer;
  position: absolute;
  right: 0;
  top: -18px;
  outline: none;
  animation-duration: 300ms;
  animation-timing-function: ease;
}

.header__button[data-open='true'] {
  background-color: hsl(52, 100%, 50%);
  animation-name: scale;
}

.header__button[data-open='false'] {
  transition: background-color 250ms linear;
}

@keyframes scale {
  from {
    transform: scale(0);
  }

  to {
    transform: scale(100%);
  }
}

.header__nav {
  background-color: #5b7cae;
  position: fixed;
  overflow: hidden;
  z-index: 3;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  padding: 40px 30px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  visibility: hidden;
  clip-path: circle(var(--radius) at calc(100% - 55px) 47px);
}

.header__nav[data-active='true'] {
  visibility: visible;
}

.header__menu {
  padding: 0;
  margin: 0;
}

.header__menu > .header__menu-item {
  font-size: 10vh;
  list-style-type: none;
}

.header__menu > .header__menu-item:not(:last-of-type) {
  margin-bottom: 0.1em;
}

.header__menu-item a {
  font-weight: bold;
  color: white;
  text-decoration: none;
}

.header__menu-item a:hover {
  font-style: italic;
}


/* Split the screen in half */
.split {
  height: 100%;
  width: 50%;
  position: fixed;
  /* z-index: 1; */
  top: 0;
  overflow-x: hidden;
  padding-top: 20px;
}

/* Control the left side */
.left {
  left: 0;
  width: 37%;
  background-color: #e2d8cc;
}

/* Control the right side */
.right {
  right: 0;
  width: 63%;
  background-color: #eebf85;
}

/* If you want the content centered horizontally and vertically */
.centered {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

/* Style the image inside the centered container, if needed */
.centered img {
  width: 150px;
  border-radius: 50%;
}

/*styling for homepage cup*/
#cup {
  z-index: 1;
}

/* for the cup */
.image {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-140%, -50%);
  text-align: center;
  z-index: 2;
}

/* for the cup */
.image img {
  width: 150px;
  border-radius: 50%;
}

#img1 {
  height: 200px;
  width: 200px;
}

/* for the duck */
.duck {
  position: absolute;
  top: 20%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 2;
}

/* for the duck */
.duck img {
  width: 150px;
  border-radius: 50%;
}

